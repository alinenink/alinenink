{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./home.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./home.component.scss?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nlet HomeComponent = class HomeComponent {\n  constructor(translate, router) {\n    this.translate = translate;\n    this.router = router;\n  }\n  ngAfterViewInit() {\n    this.startTypingAnimation();\n    // Ouvir mudanças de idioma globalmente\n    this.langChangeSubscription = this.translate.onLangChange.subscribe(() => {\n      this.startTypingAnimation();\n    });\n  }\n  startTypingAnimation() {\n    this.translate.get('SUBTITLE').subscribe(translatedText => {\n      this.typeText(translatedText, 'animated-text');\n    });\n  }\n  typeText(text, elementId) {\n    const element = document.getElementById(elementId);\n    let i = 0;\n    if (element) {\n      element.innerHTML = ''; // Limpa o texto anterior\n      clearInterval(this.typingInterval); // Certifique-se de parar animações anteriores\n      this.typingInterval = setInterval(() => {\n        if (i < text.length) {\n          element.innerHTML += text.charAt(i);\n          i++;\n        } else {\n          clearInterval(this.typingInterval);\n        }\n      }, 100); // Velocidade da digitação\n    }\n  }\n  scrollToSection(sectionId) {\n    this.router.navigate(['/' + sectionId]).then(() => {\n      setTimeout(() => {\n        const element = document.getElementById(sectionId);\n        if (element) {\n          const yOffset = -100; // Ajuste para compensar o header fixo\n          const yPosition = element.getBoundingClientRect().top + window.pageYOffset + yOffset;\n          window.scrollTo({\n            top: yPosition,\n            behavior: 'smooth'\n          });\n        }\n      }, 100);\n    });\n  }\n  ngOnDestroy() {\n    // Limpar assinaturas e intervalos quando o componente for destruído\n    if (this.langChangeSubscription) {\n      this.langChangeSubscription.unsubscribe();\n    }\n    clearInterval(this.typingInterval);\n  }\n  static {\n    this.ctorParameters = () => [{\n      type: TranslateService\n    }, {\n      type: Router\n    }];\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [CommonModule, TranslateModule, RouterModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["CommonModule","Component","Router","RouterModule","TranslateModule","TranslateService","HomeComponent","constructor","translate","router","ngAfterViewInit","startTypingAnimation","langChangeSubscription","onLangChange","subscribe","get","translatedText","typeText","text","elementId","element","document","getElementById","i","innerHTML","clearInterval","typingInterval","setInterval","length","charAt","scrollToSection","sectionId","navigate","then","setTimeout","yOffset","yPosition","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior","ngOnDestroy","unsubscribe","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\likka\\Documents\\Projetos Pessoais\\alinenink.github.io\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { AfterViewInit, Component, OnDestroy } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  standalone: true,\r\n  imports: [CommonModule, TranslateModule, RouterModule],\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements AfterViewInit, OnDestroy {\r\n  private typingInterval: any;\r\n  private langChangeSubscription!: Subscription;\r\n\r\n  constructor(private translate: TranslateService, private router: Router) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.startTypingAnimation();\r\n\r\n    // Ouvir mudanças de idioma globalmente\r\n    this.langChangeSubscription = this.translate.onLangChange.subscribe(() => {\r\n      this.startTypingAnimation();\r\n    });\r\n  }\r\n\r\n  startTypingAnimation() {\r\n    this.translate.get('SUBTITLE').subscribe((translatedText: string) => {\r\n      this.typeText(translatedText, 'animated-text');\r\n    });\r\n  }\r\n\r\n  private typeText(text: string, elementId: string) {\r\n    const element = document.getElementById(elementId);\r\n    let i = 0;\r\n\r\n    if (element) {\r\n      element.innerHTML = ''; // Limpa o texto anterior\r\n      clearInterval(this.typingInterval); // Certifique-se de parar animações anteriores\r\n\r\n      this.typingInterval = setInterval(() => {\r\n        if (i < text.length) {\r\n          element.innerHTML += text.charAt(i);\r\n          i++;\r\n        } else {\r\n          clearInterval(this.typingInterval);\r\n        }\r\n      }, 100); // Velocidade da digitação\r\n    }\r\n  }\r\n\r\n  scrollToSection(sectionId: string) {\r\n    this.router.navigate(['/' + sectionId]).then(() => {\r\n      setTimeout(() => {\r\n        const element = document.getElementById(sectionId);\r\n        if (element) {\r\n          const yOffset = -100; // Ajuste para compensar o header fixo\r\n          const yPosition =\r\n            element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n          window.scrollTo({ top: yPosition, behavior: 'smooth' });\r\n        }\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // Limpar assinaturas e intervalos quando o componente for destruído\r\n    if (this.langChangeSubscription) {\r\n      this.langChangeSubscription.unsubscribe();\r\n    }\r\n    clearInterval(this.typingInterval);\r\n  }\r\n}\r\n "],"mappings":";;;AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAAwBC,SAAS,QAAmB,eAAe;AAEnE,SAASC,MAAM,EAAEC,YAAY,QAAQ,iBAAiB;AACtD,SAASC,eAAe,EAAEC,gBAAgB,QAAQ,qBAAqB;AAUhE,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAIxBC,YAAoBC,SAA2B,EAAUC,MAAc;IAAnD,KAAAD,SAAS,GAATA,SAAS;IAA4B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAE1EC,eAAeA,CAAA;IACb,IAAI,CAACC,oBAAoB,EAAE;IAE3B;IACA,IAAI,CAACC,sBAAsB,GAAG,IAAI,CAACJ,SAAS,CAACK,YAAY,CAACC,SAAS,CAAC,MAAK;MACvE,IAAI,CAACH,oBAAoB,EAAE;IAC7B,CAAC,CAAC;EACJ;EAEAA,oBAAoBA,CAAA;IAClB,IAAI,CAACH,SAAS,CAACO,GAAG,CAAC,UAAU,CAAC,CAACD,SAAS,CAAEE,cAAsB,IAAI;MAClE,IAAI,CAACC,QAAQ,CAACD,cAAc,EAAE,eAAe,CAAC;IAChD,CAAC,CAAC;EACJ;EAEQC,QAAQA,CAACC,IAAY,EAAEC,SAAiB;IAC9C,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAACH,SAAS,CAAC;IAClD,IAAII,CAAC,GAAG,CAAC;IAET,IAAIH,OAAO,EAAE;MACXA,OAAO,CAACI,SAAS,GAAG,EAAE,CAAC,CAAC;MACxBC,aAAa,CAAC,IAAI,CAACC,cAAc,CAAC,CAAC,CAAC;MAEpC,IAAI,CAACA,cAAc,GAAGC,WAAW,CAAC,MAAK;QACrC,IAAIJ,CAAC,GAAGL,IAAI,CAACU,MAAM,EAAE;UACnBR,OAAO,CAACI,SAAS,IAAIN,IAAI,CAACW,MAAM,CAACN,CAAC,CAAC;UACnCA,CAAC,EAAE;QACL,CAAC,MAAM;UACLE,aAAa,CAAC,IAAI,CAACC,cAAc,CAAC;QACpC;MACF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACX;EACF;EAEAI,eAAeA,CAACC,SAAiB;IAC/B,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,GAAG,GAAGD,SAAS,CAAC,CAAC,CAACE,IAAI,CAAC,MAAK;MAChDC,UAAU,CAAC,MAAK;QACd,MAAMd,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAACS,SAAS,CAAC;QAClD,IAAIX,OAAO,EAAE;UACX,MAAMe,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;UACtB,MAAMC,SAAS,GACbhB,OAAO,CAACiB,qBAAqB,EAAE,CAACC,GAAG,GAAGC,MAAM,CAACC,WAAW,GAAGL,OAAO;UACpEI,MAAM,CAACE,QAAQ,CAAC;YAAEH,GAAG,EAAEF,SAAS;YAAEM,QAAQ,EAAE;UAAQ,CAAE,CAAC;QACzD;MACF,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,CAAC;EACJ;EAEAC,WAAWA,CAAA;IACT;IACA,IAAI,IAAI,CAAC/B,sBAAsB,EAAE;MAC/B,IAAI,CAACA,sBAAsB,CAACgC,WAAW,EAAE;IAC3C;IACAnB,aAAa,CAAC,IAAI,CAACC,cAAc,CAAC;EACpC;;;;;;;;;AA5DWpB,aAAa,GAAAuC,UAAA,EAPzB5C,SAAS,CAAC;EACT6C,QAAQ,EAAE,UAAU;EACpBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAChD,YAAY,EAAEI,eAAe,EAAED,YAAY,CAAC;EACtD8C,QAAA,EAAAC,oBAAoC;;CAErC,CAAC,C,EACW5C,aAAa,CA6DzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}